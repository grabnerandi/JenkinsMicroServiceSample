node {
    environment {
        APP_NAME = "SampleNodeJs"
        STAGING = "Staging"
        PRODUCTION = "Production"
    }
 
    stage('Checkout') {
        git url: 'https://github.com/grabnerandi/JenkinsMicroServiceSample', credentialsId: 'cd41a86f-ea57-4477-9b10-7f9277e650e1', branch: 'master'
        
        dir ('dynatrace-cli') {
            git url: 'https://github.com/Dynatrace/dynatrace-cli.git', credentialsId: 'cd41a86f-ea57-4477-9b10-7f9277e650e1', branch: 'master'
        }
    }

    stage('Build') {
        dir ('sample-nodejs-service') {
            def app = docker.build("sample-nodejs-service:${BUILD_NUMBER}")
        }
    }
    
    stage('CleanStaging') {
        dir ('sample-nodejs-service') {
            sh "./cleanup.sh SampleNodeJsStaging"
        }
    }
    
    stage('DeployStaging') {
        def app = docker.image("sample-nodejs-service:${BUILD_NUMBER}")
        app.run("--name SampleNodeJsStaging -p 80:80 -e 'DT_TAGS=Environment=Staging Service=Sample-NodeJs-Service' -e 'DT_CUSTOM_PROP=ENVIRONMENT=Staging JOB_NAME=${JOB_NAME} BUILD_TAG=${BUILD_TAG} BUILD_NUMBER=${BUIlD_NUMBER}'")

        dir ('dynatrace-scripts') {
            // push a deployment event on the host with the tag [AWS]Environment:JenkinsTutorial
            sh './pushdeployment.sh HOST AWS Environment JenkinsTutorial ${BUILD_TAG} ${BUILD_NUMBER} ${JOB_NAME} Jenkins ${JENKINS_URL} ${JOB_URL} ${BUILD_URL} ${GIT_COMMIT}'
            
            // now I push one on the actual process (=container)
            sh './pushdeployment.sh PROCESS CONTEXTLESS Service Sample-NodeJs-Service ${BUILD_TAG} ${BUILD_NUMBER} ${JOB_NAME} Jenkins ${JENKINS_URL} ${JOB_URL} ${BUILD_URL} ${GIT_COMMIT}'

            // now I push one on the actual service (it has the tags from our rules)
            sh './pushdeployment.sh SERVICE CONTEXTLESS DockerService SampleNodeJsStaging ${BUILD_TAG} ${BUILD_NUMBER} ${JOB_NAME} Jenkins ${JENKINS_URL} ${JOB_URL} ${BUILD_URL} ${GIT_COMMIT}'
        }    
    }
    
    stage('Testing') {
        // now I push one on the actual service (it has the tags from our rules)
        sh './pushevent.sh SERVICE CONTEXTLESS DockerService SampleNodeJsStaging "Starting Load Test" ${JOB_NAME} "Starting a JMeter Load Testing as part of the Testing stage" ${JENKINS_URL} ${JOB_URL} ${BUILD_URL} ${GIT_COMMIT}'
    }
    
    stage('Validate') {
        dir ('dynatrace-scripts') {
            DYNATRACE_PROBLEM_COUNT = sh (script: './checkforproblems.sh', returnStatus : true)
            echo "Dynatrace Problems Found: ${DYNATRACE_PROBLEM_COUNT}"
        }
        
        // now lets generate a report using our CLI
        dir ('dynatrace-cli') {
            sh 'python3 dtcli.py dqlr srv tags/CONTEXTLESS:DockerService=SampleNodeJsStaging service.responsetime[avg%hour] ${DT_URL} ${DT_TOKEN}'
            archiveArtifacts artifacts: 'dqlreport.html', fingerprint: true
        }
    }
}